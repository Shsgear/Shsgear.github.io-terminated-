<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[evil setInterval与优化]]></title>
    <url>%2F2018%2F07%2F18%2Fevil-setInterval%E4%B8%8E%E4%BC%98%E5%8C%96%2F</url>
    <content type="text"><![CDATA[邪恶的setInterval 不关心回调是否还在执行 有些时候我们执行完函数的时间要比间隔时间稍长。假如我们需要每5s从服务器发起请求，网络延迟、服务器不响应和其他可变因素可能阻止请求不能按时完成。 那么请求队列可能就并不是按照顺序来返回的 忽略执行函数时的错误 setInterval调用函数时若函数体内发生错误，不会停止而是继续运行错误的代码 不灵活 有时候我们可能需要可配置的执行次数。但是setInterval不提供 See the Pen 邪恶的setInterval by Shsgear (@Shsgear) on CodePen. 解决:优化后的interval，采用setTimeout See the Pen setInterval optimize by Shsgear (@Shsgear) on CodePen. 1234567891011121314151617// setInterval优化const interval = (func, wait, times) =&gt; &#123; let intervalInner = function (w, t)&#123; return function() &#123; if (typeof t === 'undefined' || t--&gt; 0) &#123; setTimeout(intervalInner, w); try &#123; func.apply(null); &#125; catch(err) &#123; throw err.toString(); &#125; &#125; &#125; &#125;(wait, times) setTimeout(intervalInner, wait);&#125; 此处是func无参数调用。假如func有参数，那么需要改进下函数 1234567891011121314151617181920const interval = (func, funcArgs, wait, times) =&gt; &#123; let intervalInner = function (w, t)&#123; return function() &#123; if (typeof t === 'undefined' || t--&gt; 0) &#123; setTimeout(intervalInner, w); try &#123; if (funcArgs !== undefined &amp;&amp; funcArgs.length &gt; 0) &#123; func.apply(null, [...funcArgs]); &#125; else &#123; func.apply(null); &#125; &#125; catch(err) &#123; t = 0; throw err.toString(); &#125; &#125; &#125; &#125;(wait, times) setTimeout(intervalInner, wait);&#125;]]></content>
      <categories>
        <category>javascript</category>
        <category>优化</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>setInterval优化</tag>
        <tag>setTimeout代替setInterval</tag>
        <tag>定时器</tag>
        <tag>闭包closure</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F07%2F18%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <tags>
        <tag>闲聊</tag>
      </tags>
  </entry>
</search>
